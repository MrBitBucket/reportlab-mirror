# YAML see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
name: BuildWheels

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: true

jobs:
  clear-cache:
    name: clear-cache
    runs-on: ubuntu-latest
    steps:
      - name: Dump github context
        run:  echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: setup python for clear-cache
        if: github.event.repository.name == 'reportlab-mirror'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: clear
        if: github.event.repository.name == 'reportlab-mirror'
        env:
          CITOOLS_USER: "${{secrets.CITOOLS_USER}}"
          CITOOLS_PASSWORD: "${{secrets.CITOOLS_PASSWORD}}"
        run: |
            python -mpip install --no-cache https://hg.reportlab.com/hg-public/rl-ci-tools/archive/tip.tar.gz -U
            python -mrl_ci_tools clear-cache "${{ github.event.repository.name }}"
            echo "cleared remote cache for ${{ github.event.repository.name }}"
  build-wheels-linux-mac-windows:
    needs: [clear-cache]
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_SKIP: pp* *-musllinux_* cp37-macosx_arm64 *-macosx_universal2 cp36-*
      CIBW_BEFORE_BUILD_LINUX: sh -c 'yum install cairo-devel fribidi -y || true'
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      CIBW_MANYLINUX_I686_IMAGE: manylinux2014
      # Will avoid testing on emulated architectures
      # Skip trying to test arm64 builds on Intel Macs
      CIBW_TEST_SKIP: "*-manylinux_{aarch64,ppc64le,s390x} *-musllinux_* *-macosx_arm64 *-macosx_universal2:arm64"
      CIBW_TEST_COMMAND: python -u -c "import sys,os,subprocess;r=subprocess.call((sys.executable,'-u',os.path.join(r'{project}','setup.py'),'tests-postinstall','--show-env','--verbose','--pip-install=pyphen','--pip-install=rlPyCairo','--rl-index-url=https://${{secrets.CITOOLS_USER}}:${{secrets.CITOOLS_PASSWORD}}@www.reportlab.com/pypi','--rl-pip-install=pyfribidi'),stderr=subprocess.STDOUT,timeout=180);marker=20*(chr(33) if r else '=');print('%s test command --> %s %s'%(marker,r,marker));sys.exit(r)" 2>&1
      CIBW_BUILD_VERBOSITY: 3
      CIBW_PRERELEASE_PYTHONS: True
      RL_CACHE_DIR: "/tmp/${{github.event.repository.name}}"
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Install cibuildwheel
        run: |
          python -m pip install 'cibuildwheel==2.11.2'
          python -c "import os;print('+++++ cwd=%r;dir=%r' % (os.getcwd(),os.listdir('.')))"

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: all #auto aarch64 #needs quemu setup
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            if [ "{delocate_archs}" = "arm64" ]; then
              DYLD_LIBRARY_PATH=$RL_CACHE_DIR/m1stuff/m1stuff/opt/homebrew/lib delocate-listdeps {wheel} &&
              DYLD_LIBRARY_PATH=$RL_CACHE_DIR/m1stuff/m1stuff/opt/homebrew/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
            else
              delocate-listdeps {wheel} &&
              delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
            fi
      - name: upload wheels
        env:
          CITOOLS_USER: "${{secrets.CITOOLS_USER}}"
          CITOOLS_PASSWORD: "${{secrets.CITOOLS_PASSWORD}}"
        run: |
          python -mpip install --no-cache https://hg.reportlab.com/hg-public/rl-ci-tools/archive/tip.tar.gz -U
          python -mrl_ci_tools upload-caches --subdir="${{ github.event.repository.name }}" --verbosity=1 ./wheelhouse/*.whl
          python -mrl_ci_tools env-upload

      - uses: actions/upload-artifact@v3
        with:
          name: "${{ github.event.repository.name }}-lin-win-mac"
          path: ./wheelhouse/*.whl
  email:
    if: github.event.repository.name == 'reportlab-mirror'
    name: email
    needs: [build-wheels-linux-mac-windows]
    runs-on: ubuntu-latest
    steps:
      - name: setup python for upload
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: email confirmation
        env:
          CITOOLS_USER: "${{secrets.CITOOLS_USER}}"
          CITOOLS_PASSWORD: "${{secrets.CITOOLS_PASSWORD}}"
        run: |
            python -mpip install --no-cache https://hg.reportlab.com/hg-public/rl-ci-tools/archive/tip.tar.gz -U
            BODY="$(python -mrl_ci_tools cache-info --subdir='${{ github.event.repository.name }}' '*.whl')"
            NUPLOADS=$(expr $(echo "$BODY" | wc -l) - 1)
            SUBJECT="$NUPLOADS ${{ github.event.repository.name }} wheels uploaded to our pypi/caches/${{ github.event.repository.name }} folder by github"
            python -mrl_ci_tools email --subject="$SUBJECT" --body="$BODY"
            echo "$SUBJECT"
            echo "$BODY"
